
问题1：一个师兄给了我一本《算法导论》，说你可以看看，对你的编程会很有帮助的。=》过程中有人指点很重要。 
问题2：《算法导论》=》系统的学习正确的，本质的基础知识。
大家好，我是王争，毕业于西安交通大学计算机专业。现在回想起来，本科毕业的时候，我的编程水平其实是很差的。直到读研究生的时候，一个师兄给了我一本《算法导论》，说你可以看看，对你的编程会很有帮助的。
问题2：有兴趣才会有迷恋，这样就有了很强，持久的动力。才有产生很多的行动，对事情有了更多的了解=》这样你在精神上就有了一个指导性的东西，
没想到，从此我对算法的“迷恋”便一发不可收拾。之后，我们如饥似渴地把图书馆里几乎所有数据结构和算法书籍都读了一遍。
问题3：边度边练=》是不是之前有很好的学习方法呀
问题4：我会不由自主的考虑很多性能方面的问题。，=》积累的结果=》
问题5：好的方式导致好的结果在那些方面。=》复杂度高、空间复杂度高的垃圾代码越来越少了，算法能力提高了很多，编程能力也有了质的飞越
我常常边读边练，没多久，我就发现，写代码的时候，我会不由自主的考虑很多性能方面的问题。我写出时间复杂度高、空间复杂度高的垃圾代码越来越少了，算法能力提高了很多，编程能力也有了质的飞越，得益于此，研究生毕业后，我直接进入Google，从事Google翻译相关的开发工作。

问题6：坏的方式，导致坏的结果=》从最开始到现在的全过程及心里路程。=》1和2结合导致了3的出现。=》这也是学习任何东西，通用的错误示范。
这是我自己学习数据结构与算法的经历，现在，你可以想想你的情况？
1.是不是从学校开始，你就觉得数据结构难学，然后一直没认真学？
2.工作中，一遇到数据结构这个坑，你又发自本能地迅速避让，因为你觉得自己不懂，所以也不想深究，反正看起来无关大局？
3.当你想换工作面试，或者研究某个开源项目源码，亦或者和团队讨论某个非框架层面的高可用难题的时候，你又发现，自己的基础跟不上别人的节奏？

问题7：遇到问题怎么办？
问题8：始终无法在自己现有水平上更进一步=》如何应对？
如果你是这种情况，其实你并不孤独，这不是你一个人遇到的问题。工作十年间，我见过许多程序员，他们有这各种各样的背景，有很多既有潜力又非常努力，但始终无法在自己现有水平上更进一步。

问题9：人人都倾向于关注什么样的东西？而不愿去干什么呢？=>那个更重要呢？=》如何发现这个维度并总结出来呢？=》需要悟性
问题10：计算机基础知识有哪些？代码层面的编程能力
在技术圈里，我们经常喜欢谈论高大上的架构，如高可用，微服务，服务治理等等。鲜有人关注代码层面的编程能力，而愿意沉下心来，花几个月时间啃一啃计算机基础知识，认认真真夯实基础的人，简直是凤毛麟角。

问题11：我认识，腾讯T4的技术大牛，，在区块链大潮之前，整个过程，他用了不到半年时间，就把区块链的整个技术脉络摸清楚了。为什么他就可以做到？=>深刻参透背后的含义
问题12：案例的重要性，让你明白这到底是什么样的一个过程？
我认识一位原来腾讯T4的技术大牛，在区块链大潮之前，他在腾讯工作了10多年，长期负责手机QQ后台整体建设。他经历了手机QQ从诞生到亿级用户在线的整个过程。后来他去了微众银行，有一天老板让他去做区块链，
他用了不到半年时间，就把区块链的整个技术脉络摸清楚了。
现在他是微众银行的区块链负责人，微众科技创新产品部的老总。你说厉害不？你可以花半年时间就能精通一个新的领域吗？为什么他就可以做到？

问题13：我觉得，最重要的就是基础足够扎实吗，他曾经跟我说，这些看似很新的技术，其实一点儿都不“新”，它就把那些基础的知识都学透了，当面临行业变动，新技术更迭的时候，他不断发现，核心和本质的东西其实就是当初学的哪些知识，握了这个“规律”之后，他学任何东西都很快，任何新技术都能快速迎头赶上。=>深刻参透背后的含义
问题14：我觉得，自己的看法=》他曾经跟我说，和别人讨论=》它就把那些基础的知识都学透了,它本身就有学习方法。=》他不断发现，它善于思考，总结，抽象
我觉得这其中最重要的就是基础足够扎实。他曾经跟我说，像区块链，人工智能这些看似很新的技术，其实一点儿都不“新”。最初学编程的时候，它就把那些基础的知识都学透了。当面临行业变动，新技术更迭的时候，他不断发现，那些所谓的新技术，核心和本质的东西其实就是当初学的哪些知识。掌握了这个“规律”之后，他学任何东西都很快，任何新技术都能快速迎头赶上。这就是他快速学习并且获得成功的秘诀。

问题15：对基础知识有且是正确的认识，=》对而要想快速做出点事情有且是正确的认识
所以说，基础知识就像是一座大楼的地基，它决定了我们的技术高度。而要想快速做出点事情，前提条件一定是基础能力过程，“内功”要到位。

问题16：对修炼哪些“内功”的内容有且正确的认识。
那技术人究竟都需要修炼哪些“内功”，我觉得，无外乎就是大学里的哪些基础课程，操作系统、计算机网络、编译原理等等，当然还有数据结构和算法。

问题17：像《算法导论》这些经典书籍，虽然很全面，但是过于理论，学起来非常枯燥，枯燥所以学不下去=>正确的认识
问题18：算法导论》这些经典书籍，虽然很全面，但是过于理论，学起来非常枯燥；而市面很多课程大多缺失真实的开发场景，费劲学完感觉好像还是用不上，过几天就忘了，感觉用不上为啥呢？=？正确认识 是不是学习效率的问题？
可是，我们都知道，像《算法导论》这些经典书籍，虽然很全面，但是过于理论，学起来非常枯燥；而市面很多课程大多缺失真实的开发场景，费劲学完感觉好像还是用不上，过几天就忘了。

问题19：理论的经典书籍和缺乏真实的开发场景 两者的问题之后，该怎么办？
问题20：我尝试，真正受用的数据结构与算法课程，给你指明一个简洁、高效的学习路径，一个学习基础知识的通用方法，我是怎么设计的呢=>深刻参透背后的含义
所以，我尝试做一个让你真正受用的数据结构与算法课程，希望给你指明一个简洁、高效的学习路径，教你一个学习基础知识的通用方法。那么，关于专栏内容，我是怎么设计的呢？

问题21：书籍+经验=理论+实践+总结，怎么用？ 为什么需要？捋清背后的设计思想，举一反三的能力，结合真实的软件开发案例，让你知道究竟应该如何应用到实际的编码中（如何选择和应用知识点）=>深刻参透背后的含义
1.我根据自己研读数十本算法书籍和多年项目开发的经验，在众多的数据结构和算法中，精选了最实用的内容进行讲解。
2.我不只会教你怎么用，还会告诉你，我们为什么需要这种数据结构和算法，一点点帮你捋清他们背后的设计思想，培养你举一反三的能力。
3.对于每种数据结构和算法，我都会结合真实的软件开发案例来讲解，让你知道，数据结构和算法，究竟应该如何应用到实际的编码中。

问题22：特点是由浅入深，关注的是学习的舒适度，毕竟不舒适，会增加学习的难度
为了由浅入深地带你学习，我把专栏分成四个递进的模块

1.入门篇
问题21：贯穿整个专栏的学习过程=》清晰的脉络。清晰的框架及这个知识点在其中的位置，也就是大致的框框心中有数，知识点在框框中的位置也清楚
问题22：大量的实例，让你面对真实的情况，不仅仅是面对理论。这样都是活生生的例子，一个个清晰的过程=》仅仅理论效果不好说明一个什么样的问题，学习效率的问题。
 时间、空间复杂度分析是数据结构和算法中非常重要的知识点，贯穿整个专栏的学习过程。同时也是比较难掌握的，所以我用了2节课来讲这部分内容。而且还举了大量的实例，让你一边学一边练，真正掌握复杂度分析，为后面的学习铺路。
 问题23：一个活生生的例子，让你去模仿获得最开始的自信和能力进而，=》究竟学习一个知识点，怎么算是真正的掌握，只有真正掌握了才会让你游刃有余，毫无畏惧。
 我希望通过这一模块，你掌握时间、空间复杂度的概念，大O表示法的由来，各种复杂度分析技巧，以及最好、最坏、平均、均摊复杂度分析方法。之后，面对任何代码的复杂度分析，你都能游刃有余、毫不畏惧。

 2.基础篇
 问题24：最终的目的是印象深刻，学有所用=》如何做到呢？=》具体的软件开发实例，由浅入深，适时总结实用宝典。这几个因素=》最终都是要用高的学习效率
 这部分是专栏中篇幅最大的内容。也是我们学习的重点，共有26节内容，涵盖了最基础、最常用的数据结构和算法。针对每种数据结构和算法，我都会结合具体的软件开发实例，由浅入深进行讲解，并适时总结一些实用“宝典”，保证你印象深刻、学有所用。
 问题25：当你可以对一个知识点提很多问题？并真确回答的话？=》真正掌握。
 比如递归这一节，我会讲到，为什么递归代码比较难写？如何避免堆栈溢出？如何避免递归代码冗余计算？如何将递归代码转化为非递归代码？

 问题26：入门篇，基础篇，高级篇，实战篇=》是不是经历思考后，才能获得这样区分的能力
 3。高级篇
 问题27：开阔视野的重要性=>思维的重要性=》强化训练的重要性
 这部分我会讲一些不是那么常用的数据结构和算法。虽然不常用，但是这些内容你也需要知道。设置这一部分的目的，是为了让你开阔视野，强化训练算法思维、逻辑思维。如果说了学完了基础部分可以考80分，那掌握这一部分就能让你成为尖子生！

 4.实战篇
 问题28：整个专栏都是围绕，具体软件实践中的应用，串讲一下前面讲到的数据结构和算法，剖析他们背后的数据结构和算法，更加直观的感受=>=>深刻参透背后的含义
 问题29:知道围绕，具体的软件实践，最后串讲下， 能够剖析，更加直观的感受（更深刻或者更高层面的）
 我们整个专栏都是围绕数据结构和算法在具体软件实践中的应用来讲的，所以最后我会通过实战部分串讲一下前面讲到的数据结构和算法。我会拿一些开源项目、框架或者系统设计问题，剖析他们背后的数据结构和算法，让你有一个更加直观的感受。

 问题30：人生路上，我们会遇到很多的坎=>客观事实
        跨过去，你就可以成长，跨不过去就是困难和停滞。而在后面很长的一段时间里，你都需要为这个困难买单=》过程要明白
		对于我们技术人来说，更是这样=》认清楚
		既然数据结合算法这个坎，我们总归是要跨过去，为什么不是现在呢？=》态度也就是心态
		这是我人生中为数不多的转折点之一=>什么是转折呢？ 到达新层面吗？还是本层面更完善正确。
		还是帮助你掌握一种学习知识和技能的方法=》基本能力还是要扎实的。
 人生路上，我们会遇到很多的坎。跨过去，你就可以成长，跨不过去就是困难和停滞。而在后面很长的一段时间里，你都需要为这个困难买单。对于我们技术人来说，更是这样。既然数据结合算法这个坎，我们总归是要跨过去，为什么不是现在呢？

 我很感激师兄当年给我的那本《算法导论》，这是我人生中为数不多的转折点之一。没有那本书，也可能就没有今天的我。我希望这个专栏也能成为你的一个人生转折点。

 我希望，通过这个专栏，不仅能帮你跨过数据结构与算法这个坎，还是帮助你掌握一种学习知识和技能的方法，帮你度过职场甚至人生的重要时刻！一起加油吧！